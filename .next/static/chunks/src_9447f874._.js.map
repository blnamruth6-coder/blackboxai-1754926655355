{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/IntroScreen.tsx"],"sourcesContent":["\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\n\ninterface IntroScreenProps {\n  onStart: () => void;\n}\n\nexport function IntroScreen({ onStart }: IntroScreenProps) {\n  return (\n    <div className=\"flex items-center justify-center min-h-[80vh]\">\n      <Card className=\"w-full max-w-2xl mx-auto shadow-lg\">\n        <CardHeader className=\"text-center space-y-4\">\n          <CardTitle className=\"text-4xl font-bold bg-gradient-to-r from-blue-600 to-teal-600 bg-clip-text text-transparent\">\n            From Backlog to Sprint\n          </CardTitle>\n          <CardDescription className=\"text-xl text-gray-600\">\n            Design & Build Flow\n          </CardDescription>\n        </CardHeader>\n        \n        <CardContent className=\"space-y-6\">\n          <div className=\"text-center space-y-4\">\n            <p className=\"text-lg text-gray-700 leading-relaxed\">\n              Learn how software backlog items move through the development lifecycle, \n              from initial planning to sprint execution.\n            </p>\n            \n            <div className=\"bg-blue-50 p-6 rounded-lg border-l-4 border-blue-500\">\n              <h3 className=\"font-semibold text-blue-900 mb-3\">What you'll learn:</h3>\n              <ul className=\"text-left space-y-2 text-blue-800\">\n                <li className=\"flex items-start\">\n                  <span className=\"w-2 h-2 bg-blue-500 rounded-full mt-2 mr-3 flex-shrink-0\"></span>\n                  Backlog grooming and prioritization\n                </li>\n                <li className=\"flex items-start\">\n                  <span className=\"w-2 h-2 bg-blue-500 rounded-full mt-2 mr-3 flex-shrink-0\"></span>\n                  Story point estimation techniques\n                </li>\n                <li className=\"flex items-start\">\n                  <span className=\"w-2 h-2 bg-blue-500 rounded-full mt-2 mr-3 flex-shrink-0\"></span>\n                  Sprint capacity management\n                </li>\n                <li className=\"flex items-start\">\n                  <span className=\"w-2 h-2 bg-blue-500 rounded-full mt-2 mr-3 flex-shrink-0\"></span>\n                  Spillover logic and team coordination\n                </li>\n              </ul>\n            </div>\n            \n            <div className=\"bg-teal-50 p-4 rounded-lg\">\n              <p className=\"text-teal-800 font-medium\">\n                Interactive simulation with real-world scenarios\n              </p>\n            </div>\n          </div>\n          \n          <div className=\"text-center pt-4\">\n            <Button \n              onClick={onStart}\n              size=\"lg\"\n              className=\"bg-gradient-to-r from-blue-600 to-teal-600 hover:from-blue-700 hover:to-teal-700 text-white px-8 py-3 text-lg font-semibold shadow-lg hover:shadow-xl transition-all duration-200\"\n            >\n              Begin Simulation\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AASO,SAAS,YAAY,EAAE,OAAO,EAAoB;IACvD,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC,mIAAA,CAAA,OAAI;YAAC,WAAU;;8BACd,6LAAC,mIAAA,CAAA,aAAU;oBAAC,WAAU;;sCACpB,6LAAC,mIAAA,CAAA,YAAS;4BAAC,WAAU;sCAA8F;;;;;;sCAGnH,6LAAC,mIAAA,CAAA,kBAAe;4BAAC,WAAU;sCAAwB;;;;;;;;;;;;8BAKrD,6LAAC,mIAAA,CAAA,cAAW;oBAAC,WAAU;;sCACrB,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAE,WAAU;8CAAwC;;;;;;8CAKrD,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAG,WAAU;sDAAmC;;;;;;sDACjD,6LAAC;4CAAG,WAAU;;8DACZ,6LAAC;oDAAG,WAAU;;sEACZ,6LAAC;4DAAK,WAAU;;;;;;wDAAkE;;;;;;;8DAGpF,6LAAC;oDAAG,WAAU;;sEACZ,6LAAC;4DAAK,WAAU;;;;;;wDAAkE;;;;;;;8DAGpF,6LAAC;oDAAG,WAAU;;sEACZ,6LAAC;4DAAK,WAAU;;;;;;wDAAkE;;;;;;;8DAGpF,6LAAC;oDAAG,WAAU;;sEACZ,6LAAC;4DAAK,WAAU;;;;;;wDAAkE;;;;;;;;;;;;;;;;;;;8CAMxF,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;wCAAE,WAAU;kDAA4B;;;;;;;;;;;;;;;;;sCAM7C,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,qIAAA,CAAA,SAAM;gCACL,SAAS;gCACT,MAAK;gCACL,WAAU;0CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQb;KA9DgB","debugId":null}},
    {"offset": {"line": 421, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 473, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/contexts/BacklogContext.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { createContext, useContext, useReducer, ReactNode } from 'react';\n\nexport interface BacklogItem {\n  id: string;\n  title: string;\n  description: string;\n  priority: 'High' | 'Medium' | 'Low';\n  stage: 'backlog' | 'design-plan' | 'design-groom' | 'design-estimate' | 'build-schedule' | 'build-execute' | 'completed';\n  storyPoints?: number;\n  assignedTeam?: string;\n  sprintNumber?: number;\n  estimatedHours?: number;\n}\n\nexport interface Sprint {\n  id: string;\n  number: number;\n  team: string;\n  capacity: number;\n  usedCapacity: number;\n  items: BacklogItem[];\n  startWeek: number;\n  endWeek: number;\n}\n\ninterface BacklogState {\n  items: BacklogItem[];\n  sprints: Sprint[];\n  teams: string[];\n  currentWeek: number;\n  sprintCapacity: number;\n}\n\ntype BacklogAction =\n  | { type: 'MOVE_ITEM_TO_STAGE'; itemId: string; stage: BacklogItem['stage'] }\n  | { type: 'UPDATE_STORY_POINTS'; itemId: string; points: number }\n  | { type: 'UPDATE_DESCRIPTION'; itemId: string; description: string }\n  | { type: 'UPDATE_PRIORITY'; itemId: string; priority: BacklogItem['priority'] }\n  | { type: 'ASSIGN_TO_TEAM'; itemId: string; team: string }\n  | { type: 'ASSIGN_TO_SPRINT'; itemId: string; sprintId: string }\n  | { type: 'CREATE_SPRINT'; team: string; startWeek: number }\n  | { type: 'RESET_SIMULATION' };\n\nconst initialItems: BacklogItem[] = [\n  {\n    id: '1',\n    title: 'User Authentication System',\n    description: 'Implement login, registration, and password reset functionality',\n    priority: 'High',\n    stage: 'backlog'\n  },\n  {\n    id: '2',\n    title: 'Dashboard Analytics',\n    description: 'Create interactive charts and metrics for user dashboard',\n    priority: 'Medium',\n    stage: 'backlog'\n  },\n  {\n    id: '3',\n    title: 'Mobile Responsive Design',\n    description: 'Optimize application for mobile and tablet devices',\n    priority: 'High',\n    stage: 'backlog'\n  },\n  {\n    id: '4',\n    title: 'Email Notifications',\n    description: 'Send automated emails for important user actions',\n    priority: 'Low',\n    stage: 'backlog'\n  },\n  {\n    id: '5',\n    title: 'Search Functionality',\n    description: 'Add global search with filters and sorting options',\n    priority: 'Medium',\n    stage: 'backlog'\n  },\n  {\n    id: '6',\n    title: 'API Rate Limiting',\n    description: 'Implement rate limiting to prevent API abuse',\n    priority: 'High',\n    stage: 'backlog'\n  }\n];\n\nconst initialState: BacklogState = {\n  items: initialItems,\n  sprints: [],\n  teams: ['Team Alpha', 'Team Beta', 'Team Gamma'],\n  currentWeek: 1,\n  sprintCapacity: 100 // 5 members × 2 weeks × 40 hrs ÷ 4 hrs/SP = 100 SP\n};\n\nfunction backlogReducer(state: BacklogState, action: BacklogAction): BacklogState {\n  switch (action.type) {\n    case 'MOVE_ITEM_TO_STAGE':\n      return {\n        ...state,\n        items: state.items.map(item =>\n          item.id === action.itemId\n            ? { ...item, stage: action.stage }\n            : item\n        )\n      };\n\n    case 'UPDATE_STORY_POINTS':\n      return {\n        ...state,\n        items: state.items.map(item =>\n          item.id === action.itemId\n            ? { ...item, storyPoints: action.points, estimatedHours: action.points * 4 }\n            : item\n        )\n      };\n\n    case 'UPDATE_DESCRIPTION':\n      return {\n        ...state,\n        items: state.items.map(item =>\n          item.id === action.itemId\n            ? { ...item, description: action.description }\n            : item\n        )\n      };\n\n    case 'UPDATE_PRIORITY':\n      return {\n        ...state,\n        items: state.items.map(item =>\n          item.id === action.itemId\n            ? { ...item, priority: action.priority }\n            : item\n        )\n      };\n\n    case 'ASSIGN_TO_TEAM':\n      return {\n        ...state,\n        items: state.items.map(item =>\n          item.id === action.itemId\n            ? { ...item, assignedTeam: action.team }\n            : item\n        )\n      };\n\n    case 'ASSIGN_TO_SPRINT':\n      const sprint = state.sprints.find(s => s.id === action.sprintId);\n      const item = state.items.find(i => i.id === action.itemId);\n      \n      if (!sprint || !item || !item.storyPoints) return state;\n\n      const itemStoryPoints = item.storyPoints;\n\n      // Check if sprint has capacity\n      if (sprint.usedCapacity + itemStoryPoints > sprint.capacity) {\n        // Find next available sprint or create new one\n        const nextSprint = state.sprints.find(s => \n          s.team === sprint.team && \n          s.number > sprint.number &&\n          s.usedCapacity + itemStoryPoints <= s.capacity\n        );\n\n        if (nextSprint) {\n          return {\n            ...state,\n            items: state.items.map(i =>\n              i.id === action.itemId\n                ? { ...i, sprintNumber: nextSprint.number }\n                : i\n            ),\n            sprints: state.sprints.map(s =>\n              s.id === nextSprint.id\n                ? { ...s, usedCapacity: s.usedCapacity + itemStoryPoints, items: [...s.items, item] }\n                : s\n            )\n          };\n        }\n      }\n\n      return {\n        ...state,\n        items: state.items.map(i =>\n          i.id === action.itemId\n            ? { ...i, sprintNumber: sprint.number }\n            : i\n        ),\n        sprints: state.sprints.map(s =>\n          s.id === action.sprintId\n            ? { ...s, usedCapacity: s.usedCapacity + itemStoryPoints, items: [...s.items, item] }\n            : s\n        )\n      };\n\n    case 'CREATE_SPRINT':\n      const newSprint: Sprint = {\n        id: `sprint-${state.sprints.length + 1}`,\n        number: Math.floor(state.sprints.length / state.teams.length) + 1,\n        team: action.team,\n        capacity: state.sprintCapacity,\n        usedCapacity: 0,\n        items: [],\n        startWeek: action.startWeek,\n        endWeek: action.startWeek + 1\n      };\n\n      return {\n        ...state,\n        sprints: [...state.sprints, newSprint]\n      };\n\n    case 'RESET_SIMULATION':\n      return {\n        ...initialState,\n        items: initialItems.map(item => ({ ...item, stage: 'backlog' as const }))\n      };\n\n    default:\n      return state;\n  }\n}\n\ninterface BacklogContextType {\n  state: BacklogState;\n  dispatch: React.Dispatch<BacklogAction>;\n  moveItemToStage: (itemId: string, stage: BacklogItem['stage']) => void;\n  updateStoryPoints: (itemId: string, points: number) => void;\n  updateDescription: (itemId: string, description: string) => void;\n  updatePriority: (itemId: string, priority: BacklogItem['priority']) => void;\n  assignToTeam: (itemId: string, team: string) => void;\n  assignToSprint: (itemId: string, sprintId: string) => void;\n  createSprint: (team: string, startWeek: number) => void;\n  resetSimulation: () => void;\n}\n\nconst BacklogContext = createContext<BacklogContextType | undefined>(undefined);\n\nexport function BacklogProvider({ children }: { children: ReactNode }) {\n  const [state, dispatch] = useReducer(backlogReducer, initialState);\n\n  const moveItemToStage = (itemId: string, stage: BacklogItem['stage']) => {\n    dispatch({ type: 'MOVE_ITEM_TO_STAGE', itemId, stage });\n  };\n\n  const updateStoryPoints = (itemId: string, points: number) => {\n    dispatch({ type: 'UPDATE_STORY_POINTS', itemId, points });\n  };\n\n  const updateDescription = (itemId: string, description: string) => {\n    dispatch({ type: 'UPDATE_DESCRIPTION', itemId, description });\n  };\n\n  const updatePriority = (itemId: string, priority: BacklogItem['priority']) => {\n    dispatch({ type: 'UPDATE_PRIORITY', itemId, priority });\n  };\n\n  const assignToTeam = (itemId: string, team: string) => {\n    dispatch({ type: 'ASSIGN_TO_TEAM', itemId, team });\n  };\n\n  const assignToSprint = (itemId: string, sprintId: string) => {\n    dispatch({ type: 'ASSIGN_TO_SPRINT', itemId, sprintId });\n  };\n\n  const createSprint = (team: string, startWeek: number) => {\n    dispatch({ type: 'CREATE_SPRINT', team, startWeek });\n  };\n\n  const resetSimulation = () => {\n    dispatch({ type: 'RESET_SIMULATION' });\n  };\n\n  return (\n    <BacklogContext.Provider value={{\n      state,\n      dispatch,\n      moveItemToStage,\n      updateStoryPoints,\n      updateDescription,\n      updatePriority,\n      assignToTeam,\n      assignToSprint,\n      createSprint,\n      resetSimulation\n    }}>\n      {children}\n    </BacklogContext.Provider>\n  );\n}\n\nexport function useBacklog() {\n  const context = useContext(BacklogContext);\n  if (context === undefined) {\n    throw new Error('useBacklog must be used within a BacklogProvider');\n  }\n  return context;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 753, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/BacklogRepository.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useBacklog } from \"@/contexts/BacklogContext\";\nimport { toast } from \"sonner\";\n\ninterface BacklogRepositoryProps {\n  onNext: () => void;\n}\n\nexport function BacklogRepository({ onNext }: BacklogRepositoryProps) {\n  const { state, moveItemToStage } = useBacklog();\n  const [selectedItems, setSelectedItems] = useState<string[]>([]);\n  \n  const backlogItems = state.items.filter(item => item.stage === 'backlog');\n\n  const handleItemClick = (itemId: string) => {\n    setSelectedItems(prev => \n      prev.includes(itemId) \n        ? prev.filter(id => id !== itemId)\n        : [...prev, itemId]\n    );\n  };\n\n  const handleSendToDesign = () => {\n    if (selectedItems.length === 0) {\n      toast.error(\"Please select at least one backlog item to proceed\");\n      return;\n    }\n\n    selectedItems.forEach(itemId => {\n      moveItemToStage(itemId, 'design-plan');\n    });\n\n    toast.success(`${selectedItems.length} item(s) sent to Design stage`);\n    setSelectedItems([]);\n    onNext();\n  };\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case 'High': return 'bg-red-100 text-red-800 border-red-200';\n      case 'Medium': return 'bg-yellow-100 text-yellow-800 border-yellow-200';\n      case 'Low': return 'bg-green-100 text-green-800 border-green-200';\n      default: return 'bg-gray-100 text-gray-800 border-gray-200';\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"text-center\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Backlog Repository</h1>\n        <p className=\"text-gray-600 text-lg\">\n          Select backlog items to move through the development process\n        </p>\n      </div>\n\n      <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-xl font-semibold text-gray-800\">Available Items</h2>\n          <Badge variant=\"outline\" className=\"text-sm\">\n            {backlogItems.length} items in backlog\n          </Badge>\n        </div>\n\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n          {backlogItems.map((item) => (\n            <Card \n              key={item.id}\n              className={`cursor-pointer transition-all duration-200 hover:shadow-md ${\n                selectedItems.includes(item.id) \n                  ? 'ring-2 ring-blue-500 bg-blue-50' \n                  : 'hover:bg-gray-50'\n              }`}\n              onClick={() => handleItemClick(item.id)}\n            >\n              <CardHeader className=\"pb-3\">\n                <div className=\"flex items-start justify-between\">\n                  <CardTitle className=\"text-lg font-medium text-gray-900 leading-tight\">\n                    {item.title}\n                  </CardTitle>\n                  <Badge className={`ml-2 text-xs ${getPriorityColor(item.priority)}`}>\n                    {item.priority}\n                  </Badge>\n                </div>\n              </CardHeader>\n              \n              <CardContent>\n                <CardDescription className=\"text-gray-600 text-sm leading-relaxed\">\n                  {item.description}\n                </CardDescription>\n                \n                <div className=\"mt-3 flex items-center justify-between\">\n                  <span className=\"text-xs text-gray-500 font-medium\">\n                    ID: {item.id}\n                  </span>\n                  {selectedItems.includes(item.id) && (\n                    <div className=\"w-5 h-5 bg-blue-500 rounded-full flex items-center justify-center\">\n                      <span className=\"text-white text-xs\">✓</span>\n                    </div>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n\n        {backlogItems.length === 0 && (\n          <div className=\"text-center py-12\">\n            <div className=\"text-gray-400 text-lg mb-2\">No items in backlog</div>\n            <p className=\"text-gray-500 text-sm\">All items have been moved to the next stage</p>\n          </div>\n        )}\n      </div>\n\n      <div className=\"flex items-center justify-between\">\n        <div className=\"text-sm text-gray-600\">\n          {selectedItems.length > 0 && (\n            <span className=\"font-medium text-blue-600\">\n              {selectedItems.length} item(s) selected\n            </span>\n          )}\n        </div>\n        \n        <div className=\"space-x-3\">\n          <Button\n            onClick={handleSendToDesign}\n            disabled={selectedItems.length === 0}\n            className=\"bg-blue-600 hover:bg-blue-700 text-white px-6\"\n          >\n            Send to Design\n            {selectedItems.length > 0 && (\n              <Badge className=\"ml-2 bg-blue-500 text-white\">\n                {selectedItems.length}\n              </Badge>\n            )}\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"bg-blue-50 p-4 rounded-lg border-l-4 border-blue-500\">\n        <h3 className=\"font-semibold text-blue-900 mb-2\">💡 Tip</h3>\n        <p className=\"text-blue-800 text-sm\">\n          Click on backlog items to select them. Selected items will move to the Design stage \n          where they'll go through planning, grooming, and estimation phases.\n        </p>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1101, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD;IACpD,qBACE,6LAAC,uKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIlE;KArBS","debugId":null}},
    {"offset": {"line": 1146, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS","debugId":null}},
    {"offset": {"line": 1177, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1426, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction TooltipProvider({\n  delayDuration = 0,\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Provider>) {\n  return (\n    <TooltipPrimitive.Provider\n      data-slot=\"tooltip-provider\"\n      delayDuration={delayDuration}\n      {...props}\n    />\n  )\n}\n\nfunction Tooltip({\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Root>) {\n  return (\n    <TooltipProvider>\n      <TooltipPrimitive.Root data-slot=\"tooltip\" {...props} />\n    </TooltipProvider>\n  )\n}\n\nfunction TooltipTrigger({\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Trigger>) {\n  return <TooltipPrimitive.Trigger data-slot=\"tooltip-trigger\" {...props} />\n}\n\nfunction TooltipContent({\n  className,\n  sideOffset = 0,\n  children,\n  ...props\n}: React.ComponentProps<typeof TooltipPrimitive.Content>) {\n  return (\n    <TooltipPrimitive.Portal>\n      <TooltipPrimitive.Content\n        data-slot=\"tooltip-content\"\n        sideOffset={sideOffset}\n        className={cn(\n          \"bg-primary text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-fit origin-(--radix-tooltip-content-transform-origin) rounded-md px-3 py-1.5 text-xs text-balance\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <TooltipPrimitive.Arrow className=\"bg-primary fill-primary z-50 size-2.5 translate-y-[calc(-50%_-_2px)] rotate-45 rounded-[2px]\" />\n      </TooltipPrimitive.Content>\n    </TooltipPrimitive.Portal>\n  )\n}\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,gBAAgB,EACvB,gBAAgB,CAAC,EACjB,GAAG,OACoD;IACvD,qBACE,6LAAC,sKAAA,CAAA,WAAyB;QACxB,aAAU;QACV,eAAe;QACd,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,QAAQ,EACf,GAAG,OACgD;IACnD,qBACE,6LAAC;kBACC,cAAA,6LAAC,sKAAA,CAAA,OAAqB;YAAC,aAAU;YAAW,GAAG,KAAK;;;;;;;;;;;AAG1D;MARS;AAUT,SAAS,eAAe,EACtB,GAAG,OACmD;IACtD,qBAAO,6LAAC,sKAAA,CAAA,UAAwB;QAAC,aAAU;QAAmB,GAAG,KAAK;;;;;;AACxE;MAJS;AAMT,SAAS,eAAe,EACtB,SAAS,EACT,aAAa,CAAC,EACd,QAAQ,EACR,GAAG,OACmD;IACtD,qBACE,6LAAC,sKAAA,CAAA,SAAuB;kBACtB,cAAA,6LAAC,sKAAA,CAAA,UAAwB;YACvB,aAAU;YACV,YAAY;YACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0aACA;YAED,GAAG,KAAK;;gBAER;8BACD,6LAAC,sKAAA,CAAA,QAAsB;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAI1C;MAtBS","debugId":null}},
    {"offset": {"line": 1523, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/DesignStage.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\nimport { useBacklog } from \"@/contexts/BacklogContext\";\nimport { toast } from \"sonner\";\n\ninterface DesignStageProps {\n  onNext: () => void;\n}\n\nconst DESIGN_STAGES = [\n  { key: 'design-plan', label: 'Plan', description: 'Define requirements and scope' },\n  { key: 'design-groom', label: 'Groom', description: 'Refine and clarify details' },\n  { key: 'design-estimate', label: 'Estimate', description: 'Assign story points' }\n] as const;\n\nconst STORY_POINT_OPTIONS = [1, 2, 3, 5, 8, 13];\n\nexport function DesignStage({ onNext }: DesignStageProps) {\n  const { state, moveItemToStage, updateStoryPoints, updateDescription, updatePriority } = useBacklog();\n  const [currentStageIndex, setCurrentStageIndex] = useState(0);\n  const [processingItems, setProcessingItems] = useState<string[]>([]);\n  const [editingItems, setEditingItems] = useState<Record<string, { description: string; priority: string }>>({});\n  \n  const designItems = state.items.filter(item => \n    item.stage.startsWith('design-') || item.stage === 'backlog'\n  );\n\n  const currentStage = DESIGN_STAGES[currentStageIndex];\n  const itemsInCurrentStage = designItems.filter(item => item.stage === currentStage.key);\n  const completedItems = state.items.filter(item => item.stage === 'design-estimate' && item.storyPoints);\n\n  useEffect(() => {\n    // Auto-advance items through plan stage only\n    if (currentStage.key === 'design-plan') {\n      const itemsToProcess = designItems.filter(item => item.stage === currentStage.key);\n      \n      if (itemsToProcess.length > 0 && processingItems.length === 0) {\n        setProcessingItems(itemsToProcess.map(item => item.id));\n        \n        // Simulate processing time\n        setTimeout(() => {\n          const nextStageIndex = currentStageIndex + 1;\n          const nextStage = DESIGN_STAGES[nextStageIndex];\n          \n          if (nextStage) {\n            itemsToProcess.forEach(item => {\n              moveItemToStage(item.id, nextStage.key);\n              // Initialize editing state for grooming\n              if (nextStage.key === 'design-groom') {\n                setEditingItems(prev => ({\n                  ...prev,\n                  [item.id]: {\n                    description: item.description,\n                    priority: item.priority\n                  }\n                }));\n              }\n            });\n            \n            toast.success(`${itemsToProcess.length} item(s) moved to ${nextStage.label} stage`);\n            setCurrentStageIndex(nextStageIndex);\n            setProcessingItems([]);\n          }\n        }, 2000);\n      }\n    }\n  }, [currentStageIndex, designItems, currentStage.key, processingItems.length, moveItemToStage]);\n\n  const handleDescriptionChange = (itemId: string, description: string) => {\n    setEditingItems(prev => ({\n      ...prev,\n      [itemId]: {\n        ...prev[itemId],\n        description\n      }\n    }));\n  };\n\n  const handlePriorityChange = (itemId: string, priority: string) => {\n    setEditingItems(prev => ({\n      ...prev,\n      [itemId]: {\n        ...prev[itemId],\n        priority\n      }\n    }));\n  };\n\n  const handleSaveGrooming = (itemId: string) => {\n    const editedItem = editingItems[itemId];\n    if (editedItem) {\n      updateDescription(itemId, editedItem.description);\n      updatePriority(itemId, editedItem.priority as 'High' | 'Medium' | 'Low');\n      toast.success(\"Item groomed successfully!\");\n    }\n  };\n\n  const handleProceedFromGrooming = () => {\n    const groomingItems = itemsInCurrentStage;\n    \n    if (groomingItems.length === 0) {\n      toast.error(\"No items to proceed with\");\n      return;\n    }\n\n    // Save all grooming changes\n    groomingItems.forEach(item => {\n      const editedItem = editingItems[item.id];\n      if (editedItem) {\n        updateDescription(item.id, editedItem.description);\n        updatePriority(item.id, editedItem.priority as 'High' | 'Medium' | 'Low');\n      }\n    });\n\n    // Move to estimate stage\n    groomingItems.forEach(item => {\n      moveItemToStage(item.id, 'design-estimate');\n    });\n\n    toast.success(`${groomingItems.length} item(s) moved to Estimate stage`);\n    setCurrentStageIndex(2); // Move to estimate stage\n  };\n\n  const handleStoryPointSelection = (itemId: string, points: number) => {\n    updateStoryPoints(itemId, points);\n    toast.success(`Story points updated: ${points} SP (${points * 4} hours)`);\n  };\n\n  const handleProceedToBuild = () => {\n    const estimatedItems = state.items.filter(item => \n      item.stage === 'design-estimate' && item.storyPoints\n    );\n\n    if (estimatedItems.length === 0) {\n      toast.error(\"Please estimate at least one item before proceeding\");\n      return;\n    }\n\n    estimatedItems.forEach(item => {\n      moveItemToStage(item.id, 'build-schedule');\n    });\n\n    toast.success(`${estimatedItems.length} item(s) sent to Build stage`);\n    onNext();\n  };\n\n  const getProgressValue = () => {\n    const totalStages = DESIGN_STAGES.length;\n    return ((currentStageIndex + 1) / totalStages) * 100;\n  };\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case 'High': return 'bg-red-100 text-red-800 border-red-200';\n      case 'Medium': return 'bg-yellow-100 text-yellow-800 border-yellow-200';\n      case 'Low': return 'bg-green-100 text-green-800 border-green-200';\n      default: return 'bg-gray-100 text-gray-800 border-gray-200';\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"text-center\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Design Stage</h1>\n        <p className=\"text-gray-600 text-lg\">\n          Plan, groom, and estimate backlog items\n        </p>\n      </div>\n\n      {/* Progress Bar */}\n      <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-xl font-semibold text-gray-800\">Design Progress</h2>\n          <Badge variant=\"outline\">\n            Stage {currentStageIndex + 1} of {DESIGN_STAGES.length}\n          </Badge>\n        </div>\n        \n        <Progress value={getProgressValue()} className=\"mb-4\" />\n        \n        <div className=\"flex justify-between text-sm\">\n          {DESIGN_STAGES.map((stage, index) => (\n            <div \n              key={stage.key}\n              className={`text-center ${\n                index <= currentStageIndex ? 'text-blue-600 font-medium' : 'text-gray-400'\n              }`}\n            >\n              <div className={`w-8 h-8 rounded-full mx-auto mb-1 flex items-center justify-center text-xs ${\n                index < currentStageIndex \n                  ? 'bg-blue-600 text-white' \n                  : index === currentStageIndex\n                  ? 'bg-blue-100 text-blue-600 border-2 border-blue-600'\n                  : 'bg-gray-200 text-gray-400'\n              }`}>\n                {index < currentStageIndex ? '✓' : index + 1}\n              </div>\n              <div className=\"font-medium\">{stage.label}</div>\n              <div className=\"text-xs text-gray-500\">{stage.description}</div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Current Stage Items */}\n      <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-xl font-semibold text-gray-800\">\n            {currentStage.label} Stage\n          </h2>\n          <Badge className=\"bg-blue-100 text-blue-800\">\n            {itemsInCurrentStage.length} items\n          </Badge>\n        </div>\n\n        {currentStage.key === 'design-groom' ? (\n          <div className=\"space-y-4\">\n            <p className=\"text-gray-600 mb-4\">\n              Refine item details, clarify requirements, and adjust priorities. Edit descriptions and priorities as needed.\n            </p>\n            \n            {itemsInCurrentStage.map((item) => (\n              <Card key={item.id} className=\"border-l-4 border-l-purple-500\">\n                <CardHeader className=\"pb-3\">\n                  <div className=\"flex items-start justify-between\">\n                    <CardTitle className=\"text-lg font-medium text-gray-900\">\n                      {item.title}\n                    </CardTitle>\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-sm text-gray-600\">Priority:</span>\n                      <Select\n                        value={editingItems[item.id]?.priority || item.priority}\n                        onValueChange={(value) => handlePriorityChange(item.id, value)}\n                      >\n                        <SelectTrigger className=\"w-24\">\n                          <SelectValue />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"High\">High</SelectItem>\n                          <SelectItem value=\"Medium\">Medium</SelectItem>\n                          <SelectItem value=\"Low\">Low</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n                  </div>\n                </CardHeader>\n                \n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div>\n                      <label className=\"text-sm font-medium text-gray-700 mb-2 block\">\n                        Description:\n                      </label>\n                      <Textarea\n                        value={editingItems[item.id]?.description || item.description}\n                        onChange={(e) => handleDescriptionChange(item.id, e.target.value)}\n                        placeholder=\"Refine the item description...\"\n                        className=\"min-h-20\"\n                      />\n                    </div>\n                    \n                    <div className=\"flex items-center justify-between\">\n                      <Badge className={getPriorityColor(editingItems[item.id]?.priority || item.priority)}>\n                        {editingItems[item.id]?.priority || item.priority} Priority\n                      </Badge>\n                      <Button\n                        onClick={() => handleSaveGrooming(item.id)}\n                        size=\"sm\"\n                        className=\"bg-purple-600 hover:bg-purple-700\"\n                      >\n                        Save Changes\n                      </Button>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n\n            <div className=\"mt-6 text-center\">\n              <Button\n                onClick={handleProceedFromGrooming}\n                disabled={itemsInCurrentStage.length === 0}\n                className=\"bg-purple-600 hover:bg-purple-700 text-white px-6\"\n              >\n                Proceed to Estimation\n              </Button>\n            </div>\n          </div>\n        ) : currentStage.key === 'design-estimate' ? (\n          <div className=\"space-y-4\">\n            <p className=\"text-gray-600 mb-4\">\n              Assign story points to each item. Remember: 1 Story Point = 4 hours of work.\n            </p>\n            \n            {itemsInCurrentStage.map((item) => (\n              <Card key={item.id} className=\"border-l-4 border-l-orange-500\">\n                <CardHeader className=\"pb-3\">\n                  <div className=\"flex items-start justify-between\">\n                    <div>\n                      <CardTitle className=\"text-lg font-medium text-gray-900\">\n                        {item.title}\n                      </CardTitle>\n                      <CardDescription className=\"text-gray-600 mt-1\">\n                        {item.description}\n                      </CardDescription>\n                    </div>\n                    <Badge className={getPriorityColor(item.priority)}>\n                      {item.priority}\n                    </Badge>\n                  </div>\n                </CardHeader>\n                \n                <CardContent>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm font-medium text-gray-700\">Story Points:</span>\n                    <div className=\"flex gap-2\">\n                      {STORY_POINT_OPTIONS.map((points) => (\n                        <TooltipProvider key={points}>\n                          <Tooltip>\n                            <TooltipTrigger asChild>\n                              <Button\n                                variant={item.storyPoints === points ? \"default\" : \"outline\"}\n                                size=\"sm\"\n                                onClick={() => handleStoryPointSelection(item.id, points)}\n                                className={`w-12 h-8 text-xs ${\n                                  item.storyPoints === points \n                                    ? 'bg-orange-600 hover:bg-orange-700' \n                                    : 'hover:bg-orange-50'\n                                }`}\n                              >\n                                {points}\n                              </Button>\n                            </TooltipTrigger>\n                            <TooltipContent>\n                              <p>{points} SP = {points * 4} hours</p>\n                            </TooltipContent>\n                          </Tooltip>\n                        </TooltipProvider>\n                      ))}\n                    </div>\n                  </div>\n                  \n                  {item.storyPoints && (\n                    <div className=\"mt-2 text-sm text-green-600 font-medium\">\n                      Estimated: {item.storyPoints} SP ({item.estimatedHours} hours)\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            <p className=\"text-gray-600 mb-4\">\n              Items are being processed in the {currentStage.label} stage...\n            </p>\n            \n            {itemsInCurrentStage.map((item) => (\n              <Card key={item.id} className=\"border-l-4 border-l-blue-500\">\n                <CardContent className=\"pt-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h3 className=\"font-medium text-gray-900\">{item.title}</h3>\n                      <p className=\"text-sm text-gray-600\">{item.description}</p>\n                    </div>\n                    {processingItems.includes(item.id) && (\n                      <div className=\"flex items-center space-x-2\">\n                        <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\"></div>\n                        <span className=\"text-sm text-blue-600\">Processing...</span>\n                      </div>\n                    )}\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Completed Items Summary */}\n      {completedItems.length > 0 && (\n        <div className=\"bg-green-50 p-6 rounded-lg border-l-4 border-green-500\">\n          <h3 className=\"font-semibold text-green-900 mb-2\">✅ Completed Estimation</h3>\n          <p className=\"text-green-800 text-sm mb-3\">\n            {completedItems.length} item(s) ready for Build stage\n          </p>\n          <div className=\"space-y-2\">\n            {completedItems.map((item) => (\n              <div key={item.id} className=\"flex justify-between items-center text-sm\">\n                <span className=\"text-green-800\">{item.title}</span>\n                <Badge className=\"bg-green-100 text-green-800\">\n                  {item.storyPoints} SP\n                </Badge>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      <div className=\"flex justify-between items-center\">\n        <div className=\"text-sm text-gray-600\">\n          <TooltipProvider>\n            <Tooltip>\n              <TooltipTrigger asChild>\n                <span className=\"cursor-help underline decoration-dotted\">\n                  Story Point Reference\n                </span>\n              </TooltipTrigger>\n              <TooltipContent>\n                <div className=\"text-xs\">\n                  <p>1 SP = 4 hours</p>\n                  <p>Fibonacci sequence: 1, 2, 3, 5, 8, 13</p>\n                </div>\n              </TooltipContent>\n            </Tooltip>\n          </TooltipProvider>\n        </div>\n        \n        {currentStage.key === 'design-estimate' && (\n          <Button\n            onClick={handleProceedToBuild}\n            disabled={completedItems.length === 0}\n            className=\"bg-orange-600 hover:bg-orange-700 text-white px-6\"\n          >\n            Proceed to Build\n            {completedItems.length > 0 && (\n              <Badge className=\"ml-2 bg-orange-500 text-white\">\n                {completedItems.length}\n              </Badge>\n            )}\n          </Button>\n        )}\n      </div>\n\n      {/* Enhanced Grooming Info */}\n      {currentStage.key === 'design-groom' && (\n        <div className=\"bg-purple-50 p-4 rounded-lg border-l-4 border-purple-500\">\n          <h3 className=\"font-semibold text-purple-900 mb-2\">🔍 Grooming Best Practices</h3>\n          <div className=\"text-purple-800 text-sm space-y-1\">\n            <p>• <strong>Clarify requirements:</strong> Add acceptance criteria and edge cases</p>\n            <p>• <strong>Adjust priorities:</strong> Re-evaluate based on business value and dependencies</p>\n            <p>• <strong>Break down large items:</strong> Ensure items are small enough for a sprint</p>\n            <p>• <strong>Remove ambiguity:</strong> Make sure the team understands what needs to be built</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2613, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/BuildStage.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\nimport { useBacklog } from \"@/contexts/BacklogContext\";\nimport { toast } from \"sonner\";\n\ninterface BuildStageProps {\n  onNext: () => void;\n}\n\nexport function BuildStage({ onNext }: BuildStageProps) {\n  const { state, moveItemToStage, assignToTeam, createSprint } = useBacklog();\n  const [selectedTeams, setSelectedTeams] = useState<Record<string, string>>({});\n  const [sprintsCreated, setSprintsCreated] = useState(false);\n\n  const buildItems = state.items.filter(item => \n    item.stage === 'build-schedule' || item.stage === 'build-execute'\n  );\n\n  const scheduleItems = buildItems.filter(item => item.stage === 'build-schedule');\n  const executeItems = buildItems.filter(item => item.stage === 'build-execute');\n\n  // Create initial sprints for each team\n  useEffect(() => {\n    if (!sprintsCreated && scheduleItems.length > 0) {\n      state.teams.forEach((team, index) => {\n        createSprint(team, index * 2 + 1);\n      });\n      setSprintsCreated(true);\n    }\n  }, [scheduleItems.length, sprintsCreated, state.teams, createSprint]);\n\n  const handleTeamAssignment = (itemId: string, team: string) => {\n    setSelectedTeams(prev => ({ ...prev, [itemId]: team }));\n    assignToTeam(itemId, team);\n    toast.success(`Item assigned to ${team}`);\n  };\n\n  const handleScheduleItems = () => {\n    const unassignedItems = scheduleItems.filter(item => !item.assignedTeam);\n    \n    if (unassignedItems.length > 0) {\n      toast.error(\"Please assign all items to teams before scheduling\");\n      return;\n    }\n\n    // Move items to execute stage and assign to sprints\n    scheduleItems.forEach(item => {\n      moveItemToStage(item.id, 'build-execute');\n      \n      // Find appropriate sprint for the item\n      const teamSprints = state.sprints.filter(s => s.team === item.assignedTeam);\n      const availableSprint = teamSprints.find(s => \n        s.usedCapacity + (item.storyPoints || 0) <= s.capacity\n      );\n\n      if (availableSprint && item.storyPoints) {\n        // This will be handled by the context's sprint assignment logic\n        toast.success(`${item.title} scheduled for Sprint ${availableSprint.number}`);\n      }\n    });\n\n    toast.success(\"Items scheduled for execution!\");\n  };\n\n  const handleProceedToRoadmap = () => {\n    if (executeItems.length === 0) {\n      toast.error(\"No items in execution stage\");\n      return;\n    }\n\n    onNext();\n  };\n\n  const getTeamCapacityInfo = (team: string) => {\n    const teamSprints = state.sprints.filter(s => s.team === team);\n    const totalCapacity = teamSprints.reduce((sum, sprint) => sum + sprint.capacity, 0);\n    const usedCapacity = teamSprints.reduce((sum, sprint) => sum + sprint.usedCapacity, 0);\n    \n    return { totalCapacity, usedCapacity, sprintCount: teamSprints.length };\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"text-center\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Build Stage</h1>\n        <p className=\"text-gray-600 text-lg\">\n          Schedule & assign items to teams, then execute in sprints\n        </p>\n      </div>\n\n      {/* Team Capacity Overview */}\n      <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\n        <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">Team Capacity Overview</h2>\n        <div className=\"grid gap-4 md:grid-cols-3\">\n          {state.teams.map((team) => {\n            const capacityInfo = getTeamCapacityInfo(team);\n            const utilizationPercent = capacityInfo.totalCapacity > 0 \n              ? (capacityInfo.usedCapacity / capacityInfo.totalCapacity) * 100 \n              : 0;\n\n            return (\n              <Card key={team} className=\"border-l-4 border-l-teal-500\">\n                <CardHeader className=\"pb-3\">\n                  <CardTitle className=\"text-lg font-medium\">{team}</CardTitle>\n                  <CardDescription>\n                    Sprint Capacity: {state.sprintCapacity} SP per sprint\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between text-sm\">\n                      <span>Utilization:</span>\n                      <span className=\"font-medium\">\n                        {capacityInfo.usedCapacity}/{capacityInfo.totalCapacity} SP\n                      </span>\n                    </div>\n                    <Progress value={utilizationPercent} className=\"h-2\" />\n                    <div className=\"text-xs text-gray-500\">\n                      {capacityInfo.sprintCount} sprint(s) available\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            );\n          })}\n        </div>\n        \n        <div className=\"mt-4 bg-teal-50 p-4 rounded-lg\">\n          <TooltipProvider>\n            <Tooltip>\n              <TooltipTrigger asChild>\n                <p className=\"text-teal-800 text-sm cursor-help underline decoration-dotted\">\n                  💡 Sprint Capacity Calculation\n                </p>\n              </TooltipTrigger>\n              <TooltipContent>\n                <div className=\"text-xs max-w-xs\">\n                  <p>5 members × 2 weeks × 40 hrs ÷ 4 hrs/SP = 100 SP per sprint</p>\n                  <p>Sprints repeat every 2 weeks</p>\n                </div>\n              </TooltipContent>\n            </Tooltip>\n          </TooltipProvider>\n        </div>\n      </div>\n\n      {/* Schedule & Assign Stage */}\n      {scheduleItems.length > 0 && (\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h2 className=\"text-xl font-semibold text-gray-800\">Schedule & Assign</h2>\n            <Badge className=\"bg-purple-100 text-purple-800\">\n              {scheduleItems.length} items to assign\n            </Badge>\n          </div>\n\n          <div className=\"space-y-4\">\n            {scheduleItems.map((item) => (\n              <Card key={item.id} className=\"border-l-4 border-l-purple-500\">\n                <CardHeader className=\"pb-3\">\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex-1\">\n                      <CardTitle className=\"text-lg font-medium text-gray-900\">\n                        {item.title}\n                      </CardTitle>\n                      <CardDescription className=\"text-gray-600 mt-1\">\n                        {item.description}\n                      </CardDescription>\n                    </div>\n                    <div className=\"flex items-center space-x-2 ml-4\">\n                      <Badge className=\"bg-orange-100 text-orange-800\">\n                        {item.storyPoints} SP\n                      </Badge>\n                      <Badge className={`${\n                        item.priority === 'High' ? 'bg-red-100 text-red-800' :\n                        item.priority === 'Medium' ? 'bg-yellow-100 text-yellow-800' :\n                        'bg-green-100 text-green-800'\n                      }`}>\n                        {item.priority}\n                      </Badge>\n                    </div>\n                  </div>\n                </CardHeader>\n                \n                <CardContent>\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm font-medium text-gray-700\">Assign to Team:</span>\n                    <Select\n                      value={selectedTeams[item.id] || item.assignedTeam || \"\"}\n                      onValueChange={(team) => handleTeamAssignment(item.id, team)}\n                    >\n                      <SelectTrigger className=\"w-48\">\n                        <SelectValue placeholder=\"Select team\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {state.teams.map((team) => (\n                          <SelectItem key={team} value={team}>\n                            {team}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  \n                  {item.assignedTeam && (\n                    <div className=\"mt-2 text-sm text-green-600 font-medium\">\n                      ✓ Assigned to {item.assignedTeam}\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n\n          <div className=\"mt-6 text-center\">\n            <Button\n              onClick={handleScheduleItems}\n              disabled={scheduleItems.some(item => !item.assignedTeam)}\n              className=\"bg-purple-600 hover:bg-purple-700 text-white px-6\"\n            >\n              Schedule Items for Execution\n            </Button>\n          </div>\n        </div>\n      )}\n\n      {/* Execute Stage */}\n      {executeItems.length > 0 && (\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h2 className=\"text-xl font-semibold text-gray-800\">Execute</h2>\n            <Badge className=\"bg-green-100 text-green-800\">\n              {executeItems.length} items in execution\n            </Badge>\n          </div>\n\n          <div className=\"space-y-4\">\n            {state.teams.map((team) => {\n              const teamItems = executeItems.filter(item => item.assignedTeam === team);\n              const teamSprints = state.sprints.filter(s => s.team === team);\n              \n              if (teamItems.length === 0) return null;\n\n              return (\n                <Card key={team} className=\"border-l-4 border-l-green-500\">\n                  <CardHeader className=\"pb-3\">\n                    <CardTitle className=\"text-lg font-medium\">{team}</CardTitle>\n                    <CardDescription>\n                      {teamItems.length} item(s) • {teamSprints.length} sprint(s)\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-3\">\n                      {teamItems.map((item) => (\n                        <div key={item.id} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                          <div>\n                            <h4 className=\"font-medium text-gray-900\">{item.title}</h4>\n                            <p className=\"text-sm text-gray-600\">{item.storyPoints} SP • {item.estimatedHours} hours</p>\n                          </div>\n                          <div className=\"flex items-center space-x-2\">\n                            <div className=\"animate-pulse w-2 h-2 bg-green-500 rounded-full\"></div>\n                            <span className=\"text-sm text-green-600 font-medium\">In Progress</span>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      )}\n\n      <div className=\"flex justify-between items-center\">\n        <div className=\"text-sm text-gray-600\">\n          {executeItems.length > 0 && (\n            <span className=\"text-green-600 font-medium\">\n              {executeItems.length} item(s) in execution\n            </span>\n          )}\n        </div>\n        \n        <Button\n          onClick={handleProceedToRoadmap}\n          disabled={executeItems.length === 0}\n          className=\"bg-teal-600 hover:bg-teal-700 text-white px-6\"\n        >\n          View Sprint Roadmap\n        </Button>\n      </div>\n\n      <div className=\"bg-teal-50 p-4 rounded-lg border-l-4 border-teal-500\">\n        <h3 className=\"font-semibold text-teal-900 mb-2\">🚀 Build Stage Info</h3>\n        <p className=\"text-teal-800 text-sm\">\n          Items are assigned to teams and scheduled into sprints based on capacity. \n          If a sprint is full, items automatically spill over to the next available sprint.\n        </p>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3390, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/SprintRoadmap.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\nimport { useBacklog } from \"@/contexts/BacklogContext\";\n\ninterface SprintRoadmapProps {\n  onQuiz: () => void;\n}\n\nexport function SprintRoadmap({ onQuiz }: SprintRoadmapProps) {\n  const { state } = useBacklog();\n  const [selectedSprint, setSelectedSprint] = useState<string | null>(null);\n\n  // Generate 6 sprints (12 weeks) plus trailing week\n  const totalWeeks = 13;\n  const sprintsPerTeam = 6;\n  \n  const generateRoadmapData = () => {\n    const roadmap: Record<string, Record<number, any>> = {};\n    \n    state.teams.forEach((team) => {\n      roadmap[team] = {};\n      \n      // Generate sprints for each team\n      for (let sprintNum = 1; sprintNum <= sprintsPerTeam; sprintNum++) {\n        const startWeek = (sprintNum - 1) * 2 + 1;\n        const endWeek = startWeek + 1;\n        \n        // Find items assigned to this team\n        const teamItems = state.items.filter(item => \n          item.assignedTeam === team && \n          (item.stage === 'build-execute' || item.stage === 'completed')\n        );\n        \n        // Calculate capacity usage\n        const totalStoryPoints = teamItems.reduce((sum, item) => sum + (item.storyPoints || 0), 0);\n        const capacityUsed = Math.min(totalStoryPoints, state.sprintCapacity);\n        const utilizationPercent = (capacityUsed / state.sprintCapacity) * 100;\n        \n        roadmap[team][sprintNum] = {\n          id: `${team}-S${sprintNum}`,\n          number: sprintNum,\n          startWeek,\n          endWeek,\n          items: teamItems.slice(0, Math.floor(state.sprintCapacity / 5)), // Rough distribution\n          capacity: state.sprintCapacity,\n          used: capacityUsed,\n          utilization: utilizationPercent,\n          status: sprintNum <= 2 ? 'active' : sprintNum <= 4 ? 'planned' : 'future'\n        };\n      }\n    });\n    \n    return roadmap;\n  };\n\n  const roadmapData = generateRoadmapData();\n\n  const getSprintStatusColor = (status: string) => {\n    switch (status) {\n      case 'active': return 'bg-green-100 border-green-300 text-green-800';\n      case 'planned': return 'bg-blue-100 border-blue-300 text-blue-800';\n      case 'future': return 'bg-gray-100 border-gray-300 text-gray-600';\n      default: return 'bg-gray-100 border-gray-300 text-gray-600';\n    }\n  };\n\n  const getUtilizationColor = (utilization: number) => {\n    if (utilization >= 90) return 'bg-red-500';\n    if (utilization >= 70) return 'bg-yellow-500';\n    return 'bg-green-500';\n  };\n\n  const handleExportSummary = () => {\n    // Simple export functionality - in a real app, this would generate a PDF\n    const summary = {\n      teams: state.teams.length,\n      totalItems: state.items.length,\n      completedItems: state.items.filter(item => item.storyPoints).length,\n      totalStoryPoints: state.items.reduce((sum, item) => sum + (item.storyPoints || 0), 0),\n      sprints: sprintsPerTeam * state.teams.length\n    };\n    \n    const summaryText = `\nSprint Roadmap Summary\n=====================\nTeams: ${summary.teams}\nTotal Items: ${summary.totalItems}\nEstimated Items: ${summary.completedItems}\nTotal Story Points: ${summary.totalStoryPoints}\nTotal Sprints: ${summary.sprints}\nSprint Capacity: ${state.sprintCapacity} SP per sprint\n\nGenerated on: ${new Date().toLocaleDateString()}\n    `.trim();\n    \n    const blob = new Blob([summaryText], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'sprint-roadmap-summary.txt';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"text-center\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Sprint Roadmap</h1>\n        <p className=\"text-gray-600 text-lg\">\n          Quarterly view of team sprints and capacity planning\n        </p>\n      </div>\n\n      {/* Timeline Header */}\n      <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-xl font-semibold text-gray-800\">Q1 Sprint Timeline</h2>\n          <div className=\"flex items-center space-x-4\">\n            <Badge variant=\"outline\">13 weeks</Badge>\n            <Badge variant=\"outline\">{sprintsPerTeam} sprints per team</Badge>\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-13 gap-1 mb-4\">\n          {Array.from({ length: totalWeeks }, (_, i) => (\n            <div key={i} className=\"text-center\">\n              <div className=\"text-xs font-medium text-gray-600 mb-1\">W{i + 1}</div>\n              <div className={`h-2 rounded ${\n                i < 12 && i % 2 === 0 ? 'bg-blue-200' : \n                i < 12 && i % 2 === 1 ? 'bg-blue-300' : \n                'bg-gray-200'\n              }`}></div>\n            </div>\n          ))}\n        </div>\n        \n        <div className=\"flex items-center justify-center space-x-6 text-sm\">\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-3 h-3 bg-blue-200 rounded\"></div>\n            <span>Sprint Week 1</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-3 h-3 bg-blue-300 rounded\"></div>\n            <span>Sprint Week 2</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-3 h-3 bg-gray-200 rounded\"></div>\n            <span>Buffer Week</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Sprint Grid */}\n      <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\n        <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">Sprint Allocation Grid</h2>\n        \n        <div className=\"space-y-4\">\n          {state.teams.map((team) => (\n            <div key={team} className=\"border rounded-lg p-4\">\n              <div className=\"flex items-center justify-between mb-3\">\n                <h3 className=\"font-semibold text-gray-900\">{team}</h3>\n                <Badge variant=\"outline\">\n                  Capacity: {state.sprintCapacity} SP/sprint\n                </Badge>\n              </div>\n              \n              <div className=\"grid grid-cols-6 gap-3\">\n                {Array.from({ length: sprintsPerTeam }, (_, i) => {\n                  const sprintNum = i + 1;\n                  const sprint = roadmapData[team][sprintNum];\n                  \n                  return (\n                    <TooltipProvider key={sprintNum}>\n                      <Tooltip>\n                        <TooltipTrigger asChild>\n                          <Card \n                            className={`cursor-pointer transition-all duration-200 hover:shadow-md ${\n                              getSprintStatusColor(sprint.status)\n                            } ${selectedSprint === sprint.id ? 'ring-2 ring-blue-500' : ''}`}\n                            onClick={() => setSelectedSprint(\n                              selectedSprint === sprint.id ? null : sprint.id\n                            )}\n                          >\n                            <CardContent className=\"p-3\">\n                              <div className=\"text-center\">\n                                <div className=\"font-semibold text-sm mb-1\">S{sprintNum}</div>\n                                <div className=\"text-xs text-gray-600 mb-2\">\n                                  W{sprint.startWeek}-{sprint.endWeek}\n                                </div>\n                                <Progress \n                                  value={sprint.utilization} \n                                  className=\"h-2 mb-1\"\n                                />\n                                <div className=\"text-xs font-medium\">\n                                  {sprint.used}/{sprint.capacity} SP\n                                </div>\n                              </div>\n                            </CardContent>\n                          </Card>\n                        </TooltipTrigger>\n                        <TooltipContent>\n                          <div className=\"text-xs\">\n                            <p className=\"font-semibold\">{team} - Sprint {sprintNum}</p>\n                            <p>Weeks {sprint.startWeek}-{sprint.endWeek}</p>\n                            <p>Capacity: {sprint.used}/{sprint.capacity} SP</p>\n                            <p>Utilization: {sprint.utilization.toFixed(1)}%</p>\n                            <p>Status: {sprint.status}</p>\n                          </div>\n                        </TooltipContent>\n                      </Tooltip>\n                    </TooltipProvider>\n                  );\n                })}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Sprint Details */}\n      {selectedSprint && (\n        <div className=\"bg-white p-6 rounded-lg shadow-sm border\">\n          <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">Sprint Details</h2>\n          \n          {state.teams.map((team) => {\n            const sprint = Object.values(roadmapData[team]).find(\n              (s: any) => s.id === selectedSprint\n            ) as any;\n            \n            if (!sprint) return null;\n            \n            return (\n              <Card key={team} className=\"border-l-4 border-l-blue-500\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center justify-between\">\n                    <span>{team} - Sprint {sprint.number}</span>\n                    <Badge className={getSprintStatusColor(sprint.status)}>\n                      {sprint.status}\n                    </Badge>\n                  </CardTitle>\n                  <CardDescription>\n                    Weeks {sprint.startWeek}-{sprint.endWeek} • {sprint.used}/{sprint.capacity} SP\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium\">Capacity Utilization:</span>\n                      <div className=\"flex items-center space-x-2\">\n                        <Progress value={sprint.utilization} className=\"w-24 h-2\" />\n                        <span className=\"text-sm font-medium\">\n                          {sprint.utilization.toFixed(1)}%\n                        </span>\n                      </div>\n                    </div>\n                    \n                    {sprint.items.length > 0 && (\n                      <div>\n                        <h4 className=\"font-medium text-gray-900 mb-2\">Assigned Items:</h4>\n                        <div className=\"space-y-2\">\n                          {sprint.items.map((item: any) => (\n                            <div key={item.id} className=\"flex items-center justify-between p-2 bg-gray-50 rounded\">\n                              <span className=\"text-sm\">{item.title}</span>\n                              <Badge variant=\"outline\">{item.storyPoints} SP</Badge>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    )}\n                    \n                    {sprint.utilization > 100 && (\n                      <div className=\"bg-red-50 p-3 rounded-lg border-l-4 border-red-500\">\n                        <p className=\"text-red-800 text-sm font-medium\">\n                          ⚠️ Over capacity! Items will spill over to next sprint.\n                        </p>\n                      </div>\n                    )}\n                  </div>\n                </CardContent>\n              </Card>\n            );\n          })}\n        </div>\n      )}\n\n      {/* Summary Stats */}\n      <div className=\"grid gap-4 md:grid-cols-4\">\n        <Card>\n          <CardContent className=\"p-4 text-center\">\n            <div className=\"text-2xl font-bold text-blue-600\">\n              {state.teams.length}\n            </div>\n            <div className=\"text-sm text-gray-600\">Teams</div>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent className=\"p-4 text-center\">\n            <div className=\"text-2xl font-bold text-green-600\">\n              {sprintsPerTeam * state.teams.length}\n            </div>\n            <div className=\"text-sm text-gray-600\">Total Sprints</div>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent className=\"p-4 text-center\">\n            <div className=\"text-2xl font-bold text-orange-600\">\n              {state.items.reduce((sum, item) => sum + (item.storyPoints || 0), 0)}\n            </div>\n            <div className=\"text-sm text-gray-600\">Story Points</div>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent className=\"p-4 text-center\">\n            <div className=\"text-2xl font-bold text-purple-600\">\n              {state.sprintCapacity}\n            </div>\n            <div className=\"text-sm text-gray-600\">SP per Sprint</div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Action Buttons */}\n      <div className=\"flex justify-between items-center\">\n        <Button\n          onClick={handleExportSummary}\n          variant=\"outline\"\n          className=\"border-gray-300 hover:bg-gray-50\"\n        >\n          Download Flow Summary\n        </Button>\n        \n        <Button\n          onClick={onQuiz}\n          className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-6\"\n        >\n          Take Quiz\n        </Button>\n      </div>\n\n      <div className=\"bg-indigo-50 p-4 rounded-lg border-l-4 border-indigo-500\">\n        <h3 className=\"font-semibold text-indigo-900 mb-2\">📊 Roadmap Insights</h3>\n        <p className=\"text-indigo-800 text-sm\">\n          This roadmap shows how backlog items are distributed across teams and sprints. \n          Notice how capacity constraints and spillover logic ensure realistic planning. \n          Click on individual sprints to see detailed allocation.\n        </p>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4353, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/collapsible.tsx"],"sourcesContent":["\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nfunction Collapsible({\n  ...props\n}: React.ComponentProps<typeof CollapsiblePrimitive.Root>) {\n  return <CollapsiblePrimitive.Root data-slot=\"collapsible\" {...props} />\n}\n\nfunction CollapsibleTrigger({\n  ...props\n}: React.ComponentProps<typeof CollapsiblePrimitive.CollapsibleTrigger>) {\n  return (\n    <CollapsiblePrimitive.CollapsibleTrigger\n      data-slot=\"collapsible-trigger\"\n      {...props}\n    />\n  )\n}\n\nfunction CollapsibleContent({\n  ...props\n}: React.ComponentProps<typeof CollapsiblePrimitive.CollapsibleContent>) {\n  return (\n    <CollapsiblePrimitive.CollapsibleContent\n      data-slot=\"collapsible-content\"\n      {...props}\n    />\n  )\n}\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n"],"names":[],"mappings":";;;;;;AAEA;AAFA;;;AAIA,SAAS,YAAY,EACnB,GAAG,OACoD;IACvD,qBAAO,6LAAC,0KAAA,CAAA,OAAyB;QAAC,aAAU;QAAe,GAAG,KAAK;;;;;;AACrE;KAJS;AAMT,SAAS,mBAAmB,EAC1B,GAAG,OACkE;IACrE,qBACE,6LAAC,0KAAA,CAAA,qBAAuC;QACtC,aAAU;QACT,GAAG,KAAK;;;;;;AAGf;MATS;AAWT,SAAS,mBAAmB,EAC1B,GAAG,OACkE;IACrE,qBACE,6LAAC,0KAAA,CAAA,qBAAuC;QACtC,aAAU;QACT,GAAG,KAAK;;;;;;AAGf;MATS","debugId":null}},
    {"offset": {"line": 4410, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/LegendPanel.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from \"@/components/ui/collapsible\";\n\nexport function LegendPanel() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const stageIcons = [\n    { stage: 'Plan', icon: '📋', description: 'Define requirements and scope', color: 'bg-blue-100 text-blue-800' },\n    { stage: 'Groom', icon: '🔍', description: 'Refine and clarify details', color: 'bg-purple-100 text-purple-800' },\n    { stage: 'Estimate', icon: '📊', description: 'Assign story points', color: 'bg-orange-100 text-orange-800' },\n    { stage: 'Assign', icon: '👥', description: 'Allocate to teams', color: 'bg-green-100 text-green-800' },\n    { stage: 'Execute', icon: '⚡', description: 'Sprint development', color: 'bg-teal-100 text-teal-800' }\n  ];\n\n  const priorityLevels = [\n    { level: 'High', color: 'bg-red-100 text-red-800 border-red-200', description: 'Critical features, must-have' },\n    { level: 'Medium', color: 'bg-yellow-100 text-yellow-800 border-yellow-200', description: 'Important features, should-have' },\n    { level: 'Low', color: 'bg-green-100 text-green-800 border-green-200', description: 'Nice-to-have features' }\n  ];\n\n  const definitions = [\n    {\n      term: 'Backlog',\n      definition: 'A prioritized list of features, user stories, and tasks waiting to be developed.'\n    },\n    {\n      term: 'Sprint',\n      definition: 'A time-boxed iteration (typically 2 weeks) where development work is completed.'\n    },\n    {\n      term: 'Story Point',\n      definition: 'A unit of measure for expressing the relative effort required to implement a user story.'\n    },\n    {\n      term: 'Capacity',\n      definition: 'The amount of work a team can complete in a sprint, measured in story points.'\n    },\n    {\n      term: 'Spillover',\n      definition: 'When work cannot fit in the current sprint and moves to the next available sprint.'\n    },\n    {\n      term: 'Grooming',\n      definition: 'The process of refining backlog items by adding details, estimates, and acceptance criteria.'\n    }\n  ];\n\n  return (\n    <div className=\"fixed bottom-4 right-4 z-50\">\n      <Collapsible open={isOpen} onOpenChange={setIsOpen}>\n        <CollapsibleTrigger asChild>\n          <Button\n            variant=\"outline\"\n            className=\"bg-white shadow-lg hover:shadow-xl border-gray-300 hover:bg-gray-50\"\n          >\n            {isOpen ? '✕ Close' : '❓ Help & Legend'}\n          </Button>\n        </CollapsibleTrigger>\n        \n        <CollapsibleContent className=\"mt-2\">\n          <Card className=\"w-80 max-h-96 overflow-y-auto shadow-xl border-gray-200\">\n            <CardHeader className=\"pb-3\">\n              <CardTitle className=\"text-lg font-semibold text-gray-900\">\n                Legend & Help\n              </CardTitle>\n              <CardDescription>\n                Reference guide for the backlog simulation\n              </CardDescription>\n            </CardHeader>\n            \n            <CardContent className=\"space-y-4\">\n              {/* Stage Icons */}\n              <div>\n                <h3 className=\"font-semibold text-gray-800 mb-2 text-sm\">Process Stages</h3>\n                <div className=\"space-y-2\">\n                  {stageIcons.map((item) => (\n                    <div key={item.stage} className=\"flex items-center space-x-3\">\n                      <span className=\"text-lg\">{item.icon}</span>\n                      <div className=\"flex-1\">\n                        <Badge className={`text-xs ${item.color}`}>\n                          {item.stage}\n                        </Badge>\n                        <p className=\"text-xs text-gray-600 mt-1\">{item.description}</p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Priority Levels */}\n              <div>\n                <h3 className=\"font-semibold text-gray-800 mb-2 text-sm\">Priority Levels</h3>\n                <div className=\"space-y-2\">\n                  {priorityLevels.map((priority) => (\n                    <div key={priority.level} className=\"flex items-start space-x-3\">\n                      <Badge className={`text-xs ${priority.color}`}>\n                        {priority.level}\n                      </Badge>\n                      <p className=\"text-xs text-gray-600 flex-1\">{priority.description}</p>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Story Point Reference */}\n              <div>\n                <h3 className=\"font-semibold text-gray-800 mb-2 text-sm\">Story Point System</h3>\n                <div className=\"bg-orange-50 p-3 rounded-lg border border-orange-200\">\n                  <div className=\"flex items-center space-x-2 mb-2\">\n                    <span className=\"text-orange-600 font-bold\">🎯</span>\n                    <span className=\"text-sm font-medium text-orange-800\">1 Story Point = 4 Hours</span>\n                  </div>\n                  <div className=\"text-xs text-orange-700 space-y-1\">\n                    <p>• Fibonacci sequence: 1, 2, 3, 5, 8, 13</p>\n                    <p>• Relative sizing, not absolute time</p>\n                    <p>• Includes development, testing, review</p>\n                  </div>\n                </div>\n              </div>\n\n              {/* Capacity Calculation */}\n              <div>\n                <h3 className=\"font-semibold text-gray-800 mb-2 text-sm\">Sprint Capacity</h3>\n                <div className=\"bg-teal-50 p-3 rounded-lg border border-teal-200\">\n                  <div className=\"text-xs text-teal-700 space-y-1\">\n                    <p className=\"font-medium\">Formula:</p>\n                    <p>5 members × 2 weeks × 40 hrs ÷ 4 hrs/SP</p>\n                    <p className=\"font-medium text-teal-800\">= 100 Story Points per sprint</p>\n                  </div>\n                </div>\n              </div>\n\n              {/* Key Definitions */}\n              <div>\n                <h3 className=\"font-semibold text-gray-800 mb-2 text-sm\">Key Terms</h3>\n                <div className=\"space-y-2 max-h-32 overflow-y-auto\">\n                  {definitions.map((def) => (\n                    <div key={def.term} className=\"border-l-2 border-gray-200 pl-2\">\n                      <h4 className=\"text-xs font-medium text-gray-800\">{def.term}</h4>\n                      <p className=\"text-xs text-gray-600\">{def.definition}</p>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Sprint Timeline */}\n              <div>\n                <h3 className=\"font-semibold text-gray-800 mb-2 text-sm\">Sprint Timeline</h3>\n                <div className=\"bg-blue-50 p-3 rounded-lg border border-blue-200\">\n                  <div className=\"text-xs text-blue-700 space-y-1\">\n                    <p>• Sprint duration: 2 weeks</p>\n                    <p>• 6 sprints per quarter (12 weeks)</p>\n                    <p>• 1 buffer week at end of quarter</p>\n                    <p>• Spillover items move to next sprint</p>\n                  </div>\n                </div>\n              </div>\n\n              {/* Tips */}\n              <div>\n                <h3 className=\"font-semibold text-gray-800 mb-2 text-sm\">💡 Tips</h3>\n                <div className=\"bg-gray-50 p-3 rounded-lg border border-gray-200\">\n                  <div className=\"text-xs text-gray-700 space-y-1\">\n                    <p>• Click items to select/interact</p>\n                    <p>• Hover for additional details</p>\n                    <p>• Watch for capacity warnings</p>\n                    <p>• Follow the spillover animations</p>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </CollapsibleContent>\n      </Collapsible>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5017, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/radio-group.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { CircleIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction RadioGroup({\n  className,\n  ...props\n}: React.ComponentProps<typeof RadioGroupPrimitive.Root>) {\n  return (\n    <RadioGroupPrimitive.Root\n      data-slot=\"radio-group\"\n      className={cn(\"grid gap-3\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction RadioGroupItem({\n  className,\n  ...props\n}: React.ComponentProps<typeof RadioGroupPrimitive.Item>) {\n  return (\n    <RadioGroupPrimitive.Item\n      data-slot=\"radio-group-item\"\n      className={cn(\n        \"border-input text-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 aspect-square size-4 shrink-0 rounded-full border shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator\n        data-slot=\"radio-group-indicator\"\n        className=\"relative flex items-center justify-center\"\n      >\n        <CircleIcon className=\"fill-primary absolute top-1/2 left-1/2 size-2 -translate-x-1/2 -translate-y-1/2\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n}\n\nexport { RadioGroup, RadioGroupItem }\n"],"names":[],"mappings":";;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,WAAW,EAClB,SAAS,EACT,GAAG,OACmD;IACtD,qBACE,6LAAC,6KAAA,CAAA,OAAwB;QACvB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;QAC3B,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,eAAe,EACtB,SAAS,EACT,GAAG,OACmD;IACtD,qBACE,6LAAC,6KAAA,CAAA,OAAwB;QACvB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0XACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,YAA6B;YAC5B,aAAU;YACV,WAAU;sBAEV,cAAA,6LAAC,6MAAA,CAAA,aAAU;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI9B;MArBS","debugId":null}},
    {"offset": {"line": 5082, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 5116, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/QuizMode.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { Label } from \"@/components/ui/label\";\nimport { useBacklog } from \"@/contexts/BacklogContext\";\n\ninterface QuizModeProps {\n  onRestart: () => void;\n}\n\ninterface QuizQuestion {\n  id: string;\n  question: string;\n  options: string[];\n  correctAnswer: number;\n  explanation: string;\n}\n\nconst quizQuestions: QuizQuestion[] = [\n  {\n    id: '1',\n    question: 'What happens when a sprint reaches full capacity?',\n    options: [\n      'The sprint is extended by one week',\n      'Items are automatically moved to the next available sprint',\n      'The team works overtime to fit all items',\n      'Items are removed from the backlog'\n    ],\n    correctAnswer: 1,\n    explanation: 'When a sprint reaches capacity, items automatically spill over to the next available sprint to maintain realistic planning and prevent team burnout.'\n  },\n  {\n    id: '2',\n    question: 'How many story points can a team of 5 handle in a 2-week sprint?',\n    options: [\n      '50 story points',\n      '80 story points',\n      '100 story points',\n      '120 story points'\n    ],\n    correctAnswer: 2,\n    explanation: 'Calculation: 5 members × 2 weeks × 40 hours ÷ 4 hours per story point = 100 story points per sprint.'\n  },\n  {\n    id: '3',\n    question: 'Which stage involves story point estimation?',\n    options: [\n      'Plan stage',\n      'Groom stage',\n      'Estimate stage',\n      'Execute stage'\n    ],\n    correctAnswer: 2,\n    explanation: 'The Estimate stage is specifically where story points are assigned to backlog items, typically using Fibonacci numbers (1, 2, 3, 5, 8, 13).'\n  },\n  {\n    id: '4',\n    question: 'What does 1 story point represent in terms of time?',\n    options: [\n      '2 hours of work',\n      '4 hours of work',\n      '8 hours of work',\n      '1 day of work'\n    ],\n    correctAnswer: 1,\n    explanation: 'In this simulation, 1 story point equals 4 hours of work, including development, testing, and review activities.'\n  },\n  {\n    id: '5',\n    question: 'What is the primary purpose of backlog grooming?',\n    options: [\n      'To assign story points to items',\n      'To move items between sprints',\n      'To refine and clarify item details',\n      'To assign items to team members'\n    ],\n    correctAnswer: 2,\n    explanation: 'Backlog grooming involves refining items by adding details, clarifying requirements, and ensuring items are ready for estimation and development.'\n  },\n  {\n    id: '6',\n    question: 'How long does each sprint last in this simulation?',\n    options: [\n      '1 week',\n      '2 weeks',\n      '3 weeks',\n      '4 weeks'\n    ],\n    correctAnswer: 1,\n    explanation: 'Each sprint in this simulation lasts 2 weeks, which is a common duration in agile development teams.'\n  }\n];\n\nexport function QuizMode({ onRestart }: QuizModeProps) {\n  const { resetSimulation } = useBacklog();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswers, setSelectedAnswers] = useState<Record<string, number>>({});\n  const [showResults, setShowResults] = useState(false);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n\n  const handleAnswerSelect = (questionId: string, answerIndex: number) => {\n    setSelectedAnswers(prev => ({\n      ...prev,\n      [questionId]: answerIndex\n    }));\n  };\n\n  const handleNextQuestion = () => {\n    if (currentQuestion < quizQuestions.length - 1) {\n      setCurrentQuestion(prev => prev + 1);\n    } else {\n      setShowResults(true);\n      setQuizCompleted(true);\n    }\n  };\n\n  const handlePreviousQuestion = () => {\n    if (currentQuestion > 0) {\n      setCurrentQuestion(prev => prev - 1);\n    }\n  };\n\n  const calculateScore = () => {\n    let correct = 0;\n    quizQuestions.forEach(question => {\n      if (selectedAnswers[question.id] === question.correctAnswer) {\n        correct++;\n      }\n    });\n    return { correct, total: quizQuestions.length, percentage: (correct / quizQuestions.length) * 100 };\n  };\n\n  const handleRestartSimulation = () => {\n    resetSimulation();\n    onRestart();\n  };\n\n  const getScoreColor = (percentage: number) => {\n    if (percentage >= 80) return 'text-green-600';\n    if (percentage >= 60) return 'text-yellow-600';\n    return 'text-red-600';\n  };\n\n  const getScoreBadgeColor = (percentage: number) => {\n    if (percentage >= 80) return 'bg-green-100 text-green-800';\n    if (percentage >= 60) return 'bg-yellow-100 text-yellow-800';\n    return 'bg-red-100 text-red-800';\n  };\n\n  if (showResults) {\n    const score = calculateScore();\n    \n    return (\n      <div className=\"space-y-6\">\n        <div className=\"text-center\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Quiz Results</h1>\n          <p className=\"text-gray-600 text-lg\">\n            How well did you understand the backlog flow?\n          </p>\n        </div>\n\n        {/* Score Summary */}\n        <Card className=\"max-w-2xl mx-auto\">\n          <CardHeader className=\"text-center\">\n            <CardTitle className=\"text-2xl\">\n              <span className={`font-bold ${getScoreColor(score.percentage)}`}>\n                {score.correct}/{score.total}\n              </span>\n            </CardTitle>\n            <CardDescription>\n              <Badge className={`text-lg px-4 py-2 ${getScoreBadgeColor(score.percentage)}`}>\n                {score.percentage.toFixed(0)}% Correct\n              </Badge>\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <Progress value={score.percentage} className=\"mb-4\" />\n            <div className=\"text-center\">\n              {score.percentage >= 80 ? (\n                <p className=\"text-green-700 font-medium\">\n                  🎉 Excellent! You have a strong understanding of backlog management and sprint planning.\n                </p>\n              ) : score.percentage >= 60 ? (\n                <p className=\"text-yellow-700 font-medium\">\n                  👍 Good job! You understand the basics. Review the areas you missed for improvement.\n                </p>\n              ) : (\n                <p className=\"text-red-700 font-medium\">\n                  📚 Keep learning! Consider going through the simulation again to reinforce the concepts.\n                </p>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Detailed Results */}\n        <div className=\"space-y-4\">\n          <h2 className=\"text-xl font-semibold text-gray-800 text-center\">Review Your Answers</h2>\n          \n          {quizQuestions.map((question, index) => {\n            const userAnswer = selectedAnswers[question.id];\n            const isCorrect = userAnswer === question.correctAnswer;\n            \n            return (\n              <Card key={question.id} className={`border-l-4 ${\n                isCorrect ? 'border-l-green-500 bg-green-50' : 'border-l-red-500 bg-red-50'\n              }`}>\n                <CardHeader className=\"pb-3\">\n                  <div className=\"flex items-start justify-between\">\n                    <CardTitle className=\"text-lg font-medium text-gray-900\">\n                      Question {index + 1}\n                    </CardTitle>\n                    <Badge className={isCorrect ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}>\n                      {isCorrect ? '✓ Correct' : '✗ Incorrect'}\n                    </Badge>\n                  </div>\n                  <CardDescription className=\"text-gray-700 font-medium\">\n                    {question.question}\n                  </CardDescription>\n                </CardHeader>\n                \n                <CardContent>\n                  <div className=\"space-y-3\">\n                    <div className=\"grid gap-2\">\n                      {question.options.map((option, optionIndex) => (\n                        <div \n                          key={optionIndex}\n                          className={`p-2 rounded border text-sm ${\n                            optionIndex === question.correctAnswer \n                              ? 'bg-green-100 border-green-300 text-green-800 font-medium' \n                              : optionIndex === userAnswer && !isCorrect\n                              ? 'bg-red-100 border-red-300 text-red-800'\n                              : 'bg-gray-50 border-gray-200 text-gray-700'\n                          }`}\n                        >\n                          <div className=\"flex items-center space-x-2\">\n                            {optionIndex === question.correctAnswer && (\n                              <span className=\"text-green-600\">✓</span>\n                            )}\n                            {optionIndex === userAnswer && !isCorrect && (\n                              <span className=\"text-red-600\">✗</span>\n                            )}\n                            <span>{option}</span>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                    \n                    <div className=\"bg-blue-50 p-3 rounded-lg border border-blue-200\">\n                      <h4 className=\"font-medium text-blue-900 mb-1\">Explanation:</h4>\n                      <p className=\"text-blue-800 text-sm\">{question.explanation}</p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            );\n          })}\n        </div>\n\n        {/* Action Buttons */}\n        <div className=\"flex justify-center space-x-4\">\n          <Button\n            onClick={handleRestartSimulation}\n            className=\"bg-blue-600 hover:bg-blue-700 text-white px-6\"\n          >\n            Try Simulation Again\n          </Button>\n          <Button\n            onClick={() => window.location.reload()}\n            variant=\"outline\"\n            className=\"px-6\"\n          >\n            Reset Everything\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  const question = quizQuestions[currentQuestion];\n  const progress = ((currentQuestion + 1) / quizQuestions.length) * 100;\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"text-center\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Knowledge Quiz</h1>\n        <p className=\"text-gray-600 text-lg\">\n          Test your understanding of backlog management and sprint planning\n        </p>\n      </div>\n\n      {/* Progress */}\n      <div className=\"max-w-2xl mx-auto\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <span className=\"text-sm font-medium text-gray-700\">\n            Question {currentQuestion + 1} of {quizQuestions.length}\n          </span>\n          <Badge variant=\"outline\">\n            {Math.round(progress)}% Complete\n          </Badge>\n        </div>\n        <Progress value={progress} className=\"mb-4\" />\n      </div>\n\n      {/* Question */}\n      <Card className=\"max-w-2xl mx-auto\">\n        <CardHeader>\n          <CardTitle className=\"text-xl font-semibold text-gray-900\">\n            {question.question}\n          </CardTitle>\n          <CardDescription>\n            Select the best answer from the options below\n          </CardDescription>\n        </CardHeader>\n        \n        <CardContent>\n          <RadioGroup\n            value={selectedAnswers[question.id]?.toString() || \"\"}\n            onValueChange={(value) => handleAnswerSelect(question.id, parseInt(value))}\n          >\n            {question.options.map((option, index) => (\n              <div key={index} className=\"flex items-center space-x-2 p-3 rounded-lg hover:bg-gray-50 border border-transparent hover:border-gray-200\">\n                <RadioGroupItem value={index.toString()} id={`option-${index}`} />\n                <Label htmlFor={`option-${index}`} className=\"flex-1 cursor-pointer text-sm\">\n                  {option}\n                </Label>\n              </div>\n            ))}\n          </RadioGroup>\n        </CardContent>\n      </Card>\n\n      {/* Navigation */}\n      <div className=\"flex justify-between items-center max-w-2xl mx-auto\">\n        <Button\n          onClick={handlePreviousQuestion}\n          disabled={currentQuestion === 0}\n          variant=\"outline\"\n        >\n          Previous\n        </Button>\n        \n        <div className=\"text-sm text-gray-600\">\n          {selectedAnswers[question.id] !== undefined ? (\n            <span className=\"text-green-600 font-medium\">✓ Answered</span>\n          ) : (\n            <span>Select an answer to continue</span>\n          )}\n        </div>\n        \n        <Button\n          onClick={handleNextQuestion}\n          disabled={selectedAnswers[question.id] === undefined}\n          className=\"bg-indigo-600 hover:bg-indigo-700 text-white\"\n        >\n          {currentQuestion === quizQuestions.length - 1 ? 'Finish Quiz' : 'Next'}\n        </Button>\n      </div>\n\n      <div className=\"bg-indigo-50 p-4 rounded-lg border-l-4 border-indigo-500 max-w-2xl mx-auto\">\n        <h3 className=\"font-semibold text-indigo-900 mb-2\">📝 Quiz Tips</h3>\n        <p className=\"text-indigo-800 text-sm\">\n          Think about what you learned during the simulation. The answers are based on the \n          concepts and processes you just experienced in the backlog flow.\n        </p>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5842, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { IntroScreen } from \"@/components/IntroScreen\";\nimport { BacklogRepository } from \"@/components/BacklogRepository\";\nimport { DesignStage } from \"@/components/DesignStage\";\nimport { BuildStage } from \"@/components/BuildStage\";\nimport { SprintRoadmap } from \"@/components/SprintRoadmap\";\nimport { LegendPanel } from \"@/components/LegendPanel\";\nimport { QuizMode } from \"@/components/QuizMode\";\nimport { BacklogProvider } from \"@/contexts/BacklogContext\";\n\nexport type AppStage = 'intro' | 'backlog' | 'design' | 'build' | 'roadmap' | 'quiz';\n\nexport default function Home() {\n  const [currentStage, setCurrentStage] = useState<AppStage>('intro');\n\n  const renderStage = () => {\n    switch (currentStage) {\n      case 'intro':\n        return <IntroScreen onStart={() => setCurrentStage('backlog')} />;\n      case 'backlog':\n        return <BacklogRepository onNext={() => setCurrentStage('design')} />;\n      case 'design':\n        return <DesignStage onNext={() => setCurrentStage('build')} />;\n      case 'build':\n        return <BuildStage onNext={() => setCurrentStage('roadmap')} />;\n      case 'roadmap':\n        return <SprintRoadmap onQuiz={() => setCurrentStage('quiz')} />;\n      case 'quiz':\n        return <QuizMode onRestart={() => setCurrentStage('intro')} />;\n      default:\n        return <IntroScreen onStart={() => setCurrentStage('backlog')} />;\n    }\n  };\n\n  return (\n    <BacklogProvider>\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-teal-50\">\n        <div className=\"container mx-auto px-4 py-8\">\n          {renderStage()}\n          <LegendPanel />\n        </div>\n      </div>\n    </BacklogProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAVA;;;;;;;;;;AAce,SAAS;;IACtB,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY;IAE3D,MAAM,cAAc;QAClB,OAAQ;YACN,KAAK;gBACH,qBAAO,6LAAC,oIAAA,CAAA,cAAW;oBAAC,SAAS,IAAM,gBAAgB;;;;;;YACrD,KAAK;gBACH,qBAAO,6LAAC,0IAAA,CAAA,oBAAiB;oBAAC,QAAQ,IAAM,gBAAgB;;;;;;YAC1D,KAAK;gBACH,qBAAO,6LAAC,oIAAA,CAAA,cAAW;oBAAC,QAAQ,IAAM,gBAAgB;;;;;;YACpD,KAAK;gBACH,qBAAO,6LAAC,mIAAA,CAAA,aAAU;oBAAC,QAAQ,IAAM,gBAAgB;;;;;;YACnD,KAAK;gBACH,qBAAO,6LAAC,sIAAA,CAAA,gBAAa;oBAAC,QAAQ,IAAM,gBAAgB;;;;;;YACtD,KAAK;gBACH,qBAAO,6LAAC,iIAAA,CAAA,WAAQ;oBAAC,WAAW,IAAM,gBAAgB;;;;;;YACpD;gBACE,qBAAO,6LAAC,oIAAA,CAAA,cAAW;oBAAC,SAAS,IAAM,gBAAgB;;;;;;QACvD;IACF;IAEA,qBACE,6LAAC,qIAAA,CAAA,kBAAe;kBACd,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;oBACZ;kCACD,6LAAC,oIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;;;;;AAKtB;GAhCwB;KAAA","debugId":null}}]
}